diff -u -p -r quake2-5.00/Makefile quake2-5.00-fixed/Makefile
--- quake2-5.00/Makefile	2012-09-03 08:38:19.000000000 -0400
+++ quake2-5.00-fixed/Makefile	2012-12-11 15:47:23.166430721 -0500
@@ -120,6 +120,13 @@ CFLAGS += -DSYSTEMDIR=\"$(WITH_SYSTEMDIR
 endif
 endif
 
+ifdef DEFAULT_BASEDIR
+CFLAGS += -DDEFAULT_BASEDIR=\"$(DEFAULT_BASEDIR)\"
+endif
+ifdef DEFAULT_LIBDIR
+CFLAGS += -DDEFAULT_LIBDIR=\"$(DEFAULT_LIBDIR)\"
+endif
+
 # ----------
 
 # Extra CFLAGS for SDL
diff -u -p -r quake2-5.00/src/backends/generic/qgl.c quake2-5.00-fixed/src/backends/generic/qgl.c
--- quake2-5.00/src/backends/generic/qgl.c	2012-09-03 08:38:19.000000000 -0400
+++ quake2-5.00-fixed/src/backends/generic/qgl.c	2012-12-11 15:25:25.880227735 -0500
@@ -3662,25 +3662,38 @@ QGL_Init(const char *dllname)
 		char *path;
 
 		/* try basedir next */
-		path = ri.Cvar_Get("basedir", ".", CVAR_NOSET)->string;
+		path = ri.Cvar_Get("basedir", DEFAULT_BASEDIR, CVAR_NOSET)->string;
 
 		snprintf(fn, MAX_OSPATH, "%s/%s", path, dllname);
 		ri.Sys_LoadLibrary(fn, NULL, &glw_state.OpenGLLib);
 
 		if (glw_state.OpenGLLib == NULL)
 		{
-			ri.Con_Printf(PRINT_ALL, "Trying hardcoded default libGL\n");
+            ri.Con_Printf(PRINT_ALL, "Trying libGL in DEFAULT_LIBDIR");
 
-			ri.Sys_LoadLibrary(LIBGL, NULL, &glw_state.OpenGLLib);
+            path = ri.Cvar_Get("libdir", DEFAULT_LIBDIR, CVAR_NOSET)->string;
+            snprintf(fn, MAX_OSPATH,"%s/%s", path, dllname);
+            ri.Sys_LoadLibrary(fn, NULL, &glw_state.OpenGLLib);
+            if (glw_state.OpenGLLib == NULL)
+            {
 
-			if (glw_state.OpenGLLib == NULL)
-			{
-				return false;
-			}
+                ri.Con_Printf(PRINT_ALL, "Trying hardcoded default libGL\n");
+
+                ri.Sys_LoadLibrary(LIBGL, NULL, &glw_state.OpenGLLib);
+
+                if (glw_state.OpenGLLib == NULL)
+                {
+                    return false;
+                }
+                else
+                {
+                    ri.Cvar_Set("gl_driver", LIBGL);
+                    Com_Printf("Using %s for OpenGL.\n", LIBGL);
+                }
+            }
 			else
 			{
-				ri.Cvar_Set("gl_driver", LIBGL);
-				Com_Printf("Using %s for OpenGL.\n", LIBGL);
+                Com_Printf("Using %s for OpenGL.\n", fn);
 			}
 		}
 		else
diff -u -p -r quake2-5.00/src/backends/generic/vid.c quake2-5.00-fixed/src/backends/generic/vid.c
--- quake2-5.00/src/backends/generic/vid.c	2012-09-03 08:38:19.000000000 -0400
+++ quake2-5.00-fixed/src/backends/generic/vid.c	2012-12-11 15:32:12.160050227 -0500
@@ -231,14 +231,22 @@ VID_LoadRefresh(char *name)
 
 	Com_Printf("----- refresher initialization -----\n");
 
-	path = Cvar_Get("basedir", ".", CVAR_NOSET)->string;
+	path = Cvar_Get("basedir", DEFAULT_BASEDIR, CVAR_NOSET)->string;
 	snprintf(fn, MAX_OSPATH, "%s/%s", path, name);
 
 	Sys_LoadLibrary(fn, NULL, &reflib_library);
 
 	if (reflib_library == 0)
 	{
-		return false;
+        path = Cvar_Get("libdir", DEFAULT_LIBDIR, CVAR_NOSET)->string;
+        snprintf(fn, MAX_OSPATH, "%s/%s", path, name);
+
+        Sys_LoadLibrary(fn, NULL, &reflib_library);
+
+        if (reflib_library == 0)
+        {
+            return false;
+        }
 	}
 
 
diff -u -p -r quake2-5.00/src/common/filesystem.c quake2-5.00-fixed/src/common/filesystem.c
--- quake2-5.00/src/common/filesystem.c	2012-09-03 08:38:19.000000000 -0400
+++ quake2-5.00-fixed/src/common/filesystem.c	2012-12-11 15:39:56.453502821 -0500
@@ -131,6 +131,7 @@ char file_from_pk3_name[MAX_QPATH];
 
 cvar_t *fs_homepath;
 cvar_t *fs_basedir;
+cvar_t *fs_libdir;
 cvar_t *fs_cddir;
 cvar_t *fs_gamedirvar;
 cvar_t *fs_debug;
@@ -1676,6 +1677,7 @@ FS_SetGamedir(char *dir)
 #endif
 
 		FS_AddGameDirectory(va("%s/%s", fs_basedir->string, dir));
+        FS_AddGameDirectory(va("%s/%s", fs_libdir->string, dir));
 		FS_AddHomeAsGameDirectory(dir);
 	}
 }
@@ -2063,7 +2065,10 @@ FS_InitFilesystem(void)
 	Cmd_AddCommand("dir", FS_Dir_f);
 
 	/* basedir <path> Allows the game to run from outside the data tree.  */
-	fs_basedir = Cvar_Get("basedir", ".", CVAR_NOSET);
+	fs_basedir = Cvar_Get("basedir", DEFAULT_BASEDIR, CVAR_NOSET);
+
+    /* libdir <path> Allows the to store binary files (not data) in a sep tree */
+    fs_libdir = Cvar_Get("libdir", DEFAULT_LIBDIR, CVAR_NOSET);
 
 	/* cddir <path> Logically concatenates the cddir after the basedir to
 	   allow the game to run from outside the data tree. */
@@ -2089,6 +2094,7 @@ FS_InitFilesystem(void)
 
 	/* Add baseq2 to search path. */
 	FS_AddGameDirectory(va("%s/" BASEDIRNAME, fs_basedir->string));
+    FS_AddGameDirectory(va("%s/" BASEDIRNAME, fs_libdir->string));
 	FS_AddHomeAsGameDirectory(BASEDIRNAME);
 
 	/* Any set gamedirs will be freed up to here. */
diff -u -p -r quake2-5.00/src/common/header/common.h quake2-5.00-fixed/src/common/header/common.h
--- quake2-5.00/src/common/header/common.h	2012-09-03 08:38:19.000000000 -0400
+++ quake2-5.00-fixed/src/common/header/common.h	2012-12-11 15:42:17.926752511 -0500
@@ -73,6 +73,13 @@
  #define LIBGL "libGL.so.1"
 #endif
 
+#ifndef DEFAULT_BASEDIR
+ #define DEFAULT_BASEDIR "."
+#endif
+#ifndef DEFAULT_LIBDIR
+ #define DEFAULT_LIBDIR DEFAULT_BASEDIR
+#endif
+
 
 /* ================================================================== */
 
